image: python:latest  # Utilizza l'immagine Docker Python piÃ¹ recente

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"  # Definisci una variabile per la directory di cache di pip

cache:
  paths:
    - .cache/pip  # Aggiungi la directory di cache di pip alla cache
    - venv/  # Aggiungi l'ambiente virtuale alla cache

stages:
  - build  # Definisci le fasi del processo CI/CD
  - verify
  - unit-test
  - integration-test
  - package
  - release
  - docs

before_script:
  - python --version
  - pip --version
  - python -m venv venv 
  - source venv/bin/activate
build:
  stage: build
  script:
    - pip install -r requirements.txt  # Installa le dipendenze dal file requirements.txt

verify:
  stage: verify
  script:
    - prospector  # Esegui l'analisi statica con Prospector
    - bandit -r 2023_assignment1_viewscounter --exclude tests

unit-test:
  stage: unit-test
  script:
    - pytest tests/test_unit.py  # Esegui i test unitari

integration-test:
  stage: integration-test
  script:
    - pytest tests/test_integration.py  # Esegui i test di integrazione
  only:
  - main  # Esegui questa fase solo quando si fa push su main

package:
  stage: package
  script:
    - python setup.py sdist bdist_wheel  # Crea il pacchetto sorgente e il pacchetto bdist_wheel
  artifacts:
    paths:
      - dist/  # Archivia i file di distribuzione nella directory "dist/"
  only:
  - main  # Esegui questa fase solo quando si fa push su main

release:
  stage: release
  script:
    - source venv/bin/activate  # Attiva l'ambiente virtuale
    - echo "[pypi]" > ~/.pypirc  # Crea un file di configurazione per PyPI
    - echo "username = __token__" >> ~/.pypirc  # Specifica l'username come "__token__" per l'autenticazione PyPI
    - echo "password = $TWINE_TOKEN" >> ~/.pypirc  # Specifica la password/token per l'autenticazione PyPI
    - twine upload dist/*  # Carica i pacchetti su PyPI
  only:
  - main  # Esegui questa fase solo quando si fa push su main

docs:
  stage: docs
  script:
    - pip install mkdocs
    - mkdocs build --clean
  artifacts:
    paths: 
      - mkdocs.yaml
    when: on_success
  only:
  - main

